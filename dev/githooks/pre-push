#!/usr/bin/env python3

import subprocess
import starsmashertools
import os
import sys

test_dir = os.path.join(
    starsmashertools.SOURCE_DIRECTORY,
    'tests',
)
sphinx_dir = os.path.join(
    starsmashertools.SOURCE_DIRECTORY,
    'sphinx',
)

# First pass the tests

os.chdir(test_dir)
try:
    p = subprocess.run(
        ['python3', 'run_all_tests.py'],
        check = True,
        text = True,
        stdout = subprocess.PIPE,
        stderr = subprocess.STDOUT,
    )
    if p.stdout and ('FAILED' in p.stdout or 'Traceback' in p.stdout):
        print(p.stdout)
        sys.exit(1)
except subprocess.CalledProcessError as e:
    print(e.returncode)
    print(e.output)
    sys.exit(1)


# Now build the docs
os.chdir(sphinx_dir)
try:
    p = subprocess.run(
        ['make', 'clean'],
        check = True,
        text = True,
        stdout = subprocess.PIPE,
        stderr = subprocess.STDOUT,
    ) # We don't care if this fails.
except subprocess.CalledProcessError as e:
    print(e.returncode)
    print(e.output)
    sys.exit(1)

try:
    p = subprocess.run(
        ['make', 'html'],
        check = True,
        text = True,
        stdout = subprocess.PIPE,
        stderr = subprocess.STDOUT,
    )
    if not 'build succeeded' in p.stdout:
        print(p.stdout)
        sys.exit(1)
except subprocess.CalledProcessError as e:
    print(e.returncode)
    print(e.output)
    sys.exit(1)


# Add doc changes to the most recent commit
os.chdir(starsmashertools.SOURCE_DIRECTORY)
try:
    p = subprocess.run(
        ['git', 'add', 'docs'],
        check = True,
        text = True,
        stdout = subprocess.PIPE,
        stderr = subprocess.STDOUT,
    )
except subprocess.CalledProcessError as e:
    print(e.returncode)
    print(e.output)
    sys.exit(1)

try:
    p = subprocess.run(
        ['git', 'commit', '--amend', '-C', 'HEAD', '--no-verify'],
        check = True,
        text = True,
        stdout = subprocess.PIPE,
        stderr = subprocess.STDOUT,
    )
except subprocess.CalledProcessError as e:
    print(e.returncode)
    print(e.output)
    sys.exit(1)

sys.exit(0)
