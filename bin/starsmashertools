#!/usr/bin/env python3

"""
This program exposes the methods defined in
`starsmashertools.lib.simulation.Simulation`,
`starsmashertools.lib.relaxation.Relaxation`,
`starsmashertools.lib.binary.Binary`, and
`starsmashertools.lib.dynamical.Dynamical` for use on the command line.
"""

#import starsmashertools
import starsmashertools.bintools.cli
import starsmashertools.bintools
import starsmashertools
import os

newline = starsmashertools.bintools.Style.get('characters', 'newline')

cli = starsmashertools.bintools.cli.HookedCLI(
    os.path.basename(__file__),
    "Analyze a StarSmasher simulation directory.",
    # We don't need a valid directory if we are just checking the package version
    require_valid_directory = False,
)

cli.parser.add_argument(
    '-d',
    '--directory',
    nargs='?',
    type=str,
    default=os.getcwd(),
    required=False,
    metavar='directory',
    help='The StarSmasher simulation directory to analyze. Defaults to the current working directory if not specified.',
)

cli.parser.add_argument(
    '--version',
    action='store_true',
    default=False,
    help='Print the starsmashertools version to the console. Other command line options are ignored when this flag is specified.'
)



if cli.args['version']:
    print(starsmashertools.__version__)
    quit()


# Now we check for a valid directory (implicitly)
simulation = starsmashertools.get_simulation(cli.args['directory'])

cli.set_object(simulation)

cli.set_mainmenu_properties(
    header = starsmashertools.bintools.Style.bold("Main Menu") + newline + newline + ("Directory = %s" % cli.args['directory']) + newline + newline + 'Choose an option' + newline,
    footer = newline,
)

cli.run()
