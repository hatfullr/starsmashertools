#!/usr/bin/env python3

import starsmashertools.mpl.plotdata
import starsmashertools.helpers.path
import starsmashertools.bintools.cli
import starsmashertools.bintools
import collections
import os



newline = starsmashertools.bintools.Style.get('characters', 'newline')
starsmashertools.bintools.Style.set('formatting', 'footer', newline)


cli = starsmashertools.bintools.cli.CLI(
    'inspectpdc',
    "A tool for viewing the contents of a checkpoint file created by starsmashertools, called 'pdc.json.gz' by default.",
)

cli.parser.add_argument(
    'filename',
    help='The checkpoint PDC file to inspect',
)





# Get the simulations from the pdc file
filename = cli.args['filename']
if not starsmashertools.helpers.path.isfile(filename):
    raise FileNotFoundError(filename)

pdc = starsmashertools.mpl.plotdata.PDCFile(filename = filename)
pdc.load()

methods = pdc.get_methods()

simulation_names = []
for filename in pdc.keys():
    name = starsmashertools.helpers.path.dirname(pdc._simplify_filename(filename))
    if name not in simulation_names: simulation_names += [name]
simulation_names = sorted(simulation_names)


mainmenu = cli.add_list(
    [int, str],
    items=simulation_names,
    bullet='%5d)',
    header=newline + starsmashertools.bintools.Style.bold("Main Menu") + newline + newline + 'Choose a simulation' + newline,
)

labels = [
    starsmashertools.bintools.Style.bold("Filename"),
]
for method in methods:
    labels += [starsmashertools.bintools.Style.bold(method)]

    
for i, name in enumerate(simulation_names):
    # Obtain file names to show in table
    file_methods = collections.OrderedDict()
    for filename, data in pdc.items():
        if name in filename:
            file_methods[os.path.basename(filename)] = [list(data.keys()), list(data.values())]
    
    columns = [[None] * len(list(file_methods.keys())) for label in labels]
    columns[0] = list(file_methods.keys())
    
    for row, (fname, _methods) in enumerate(file_methods.items()):
        for j, method in enumerate(methods):
            value = None
            if method in _methods[0]:
                value = _methods[1][_methods[0].index(method)]

            if value is not None:
                columns[j+1][row] = starsmashertools.bintools.Style.color(
                    str(value),
                    'green',
                )
            else:
                columns[j+1][row] = starsmashertools.bintools.Style.color('None', 'red')
        
    table = cli.add_table(
        [],
        columns = columns,
        labels = labels,
        back = mainmenu,
    )
    
    mainmenu.connect(table, [i, name])

cli.set_mainmenu(mainmenu)


# Run the program
cli.run()
